{"version":3,"sources":["logo.svg","App.js","Keypaddisplay.jsx","reportWebVitals.js","index.js","ResultCmp.jsx"],"names":["App","Keypaddisplay","state","isclicked","myval","valuebtn","this","setState","slice","passresultcmp","ResultCmp","btnvalue","className","onClick","handleClick","bind","button","handleClickDelete","handleClickBackspace","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","props","includes","newbtnvalue","replace","finalresult","eval"],"mappings":"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","file":"static/js/main.15305ec7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport ResultCmp from \"./ResultCmp\";\r\n\r\nclass Keypaddisplay extends Component {\r\n  state = {\r\n    isclicked: false,\r\n    myval:\"\",\r\n  };\r\n\r\n  handleClick(valuebtn) {\r\n    this.setState({ isclicked: true });\r\n    this.setState((state) => {//here state refer to prev state\r\n      return { myval: state.myval + valuebtn };//concate prev value of state +new value from function\r\n    });\r\n  }\r\n\r\n  handleClickDelete(valuebtn) {\r\n    this.setState({ isclicked: true });\r\n    this.setState((state) => {\r\n      return { myval:\"\" };\r\n    });\r\n  }\r\n  handleClickBackspace(valuebtn) {\r\n    this.setState({ isclicked: true });\r\n    this.setState((state) => {\r\n      return { myval:state.myval.slice(0, -1) };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const passresultcmp = <ResultCmp btnvalue={this.state.myval} />;\r\n\r\n    return (\r\n     \r\n      <div className=\"App\">\r\n         <header className=\"App-header\">\r\n      \r\n      <h1> <b>Calculator using React</b></h1>\r\n      {passresultcmp}\r\n  \r\n        <div>\r\n\r\n       \r\n       \r\n          <button onClick={this.handleClick.bind(this, 7)} button>\r\n            7\r\n          </button>\r\n          <button onClick={this.handleClick.bind(this, 8)} button>\r\n            8\r\n          </button>\r\n          <button onClick={this.handleClick.bind(this, 9)} button>\r\n            9\r\n          </button>\r\n          <button onClick={this.handleClick.bind(this,'/')} button>\r\n           /\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button onClick={this.handleClick.bind(this, 4)} button>\r\n            4\r\n          </button>\r\n          <button onClick={this.handleClick.bind(this, 5)} button>\r\n            5\r\n          </button>\r\n          <button onClick={this.handleClick.bind(this, 6)} button>\r\n            6\r\n          </button>\r\n          <button onClick={this.handleClick.bind(this, \"*\")} button>\r\n            *\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button onClick={this.handleClick.bind(this, 1)} button>\r\n            1\r\n          </button>\r\n          <button onClick={this.handleClick.bind(this, 2)} button>\r\n            2\r\n          </button>\r\n          <button onClick={this.handleClick.bind(this, 3)} button>\r\n            3\r\n          </button>\r\n          <button onClick={this.handleClick.bind(this, \"-\")} button>\r\n            -\r\n          </button>\r\n        </div>\r\n\r\n        <div>\r\n          <button onClick={this.handleClick.bind(this, 0)} button>\r\n            0\r\n          </button>\r\n          <button onClick={this.handleClick.bind(this, \".\")} button>\r\n            .\r\n          </button>\r\n          <button onClick={this.handleClick.bind(this, \"=\")} button>\r\n            =\r\n          </button>\r\n          <button onClick={this.handleClick.bind(this, \"+\")} button>\r\n            +\r\n          </button>\r\n        </div>\r\n\r\n        <div>\r\n       \r\n          <button onClick={this.handleClickDelete.bind(this, \"C\")} button>\r\n            C\r\n          </button>\r\n          <button onClick={this.handleClickBackspace.bind(this, \"CE\")} button>\r\n          CE\r\n          </button>\r\n        </div>\r\n     \r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Keypaddisplay;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Keypaddisplay from './Keypaddisplay'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Keypaddisplay />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass ResultCmp extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { btnvalue } = this.props;\r\n\r\n    //basic calculation\r\n\r\n    if (btnvalue.includes(\"=\")) {\r\n      var newbtnvalue = btnvalue;\r\n      newbtnvalue = newbtnvalue.replace(\"=\", \"\");\r\n      var finalresult = eval(newbtnvalue);\r\n    }\r\n\r\n    return (\r\n      <div className=\"result\">\r\n        <p>\r\n          {btnvalue}\r\n          {finalresult}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultCmp;\r\n"],"sourceRoot":""}