{"version":3,"sources":["ResultCmp.jsx","logo.svg","App.js","reportWebVitals.js","index.js","Keypaddisplay.jsx"],"names":["ResultCmp","state","finalresult","this","props","btnvalue","calculate","className","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Keypaddisplay","document","getElementById","isclicked","myval","myfinalval","valuebtn","setState","eval","slice","passresultcmp","onClick","handleClick","bind","button","handleClickDelete","handleClickBackspace"],"mappings":"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","file":"static/js/main.98aa0603.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass ResultCmp extends Component {\r\n  state = {\r\n    finalresult:\"\"\r\n  };\r\n  click()\r\n  {\r\n  if (this.props.btnvalue === \"=\")\r\n\r\n   {\r\n    this.calculate();\r\n   \r\n  }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { finalresult } = this.props;\r\n\r\n//console.log(btnvalue)\r\n    //basic calculation\r\n\r\n    \r\n    return (\r\n      <div className=\"result\">\r\n        <p>\r\n      \r\n         {finalresult}\r\n      \r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultCmp;\r\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Keypaddisplay from './Keypaddisplay'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Keypaddisplay />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport ResultCmp from \"./ResultCmp\";\r\n\r\nclass Keypaddisplay extends Component {\r\n  state = {\r\n    isclicked: false,\r\n    myval: \"\",\r\n    myfinalval:\"\",\r\n  };\r\n\r\n  handleClick(valuebtn) {\r\n    this.setState({ isclicked: true });\r\n    if (valuebtn === \"=\") {\r\n      this.setState({ myval: eval(this.state.myval) });\r\n    } else {\r\n      this.setState((state) => {\r\n        //here state refer to prev state\r\n\r\n        return { myval: state.myval + valuebtn }; //concate prev value of state +new value from function\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClickDelete(valuebtn) {\r\n    this.setState({ isclicked: true });\r\n    this.setState((state) => {\r\n      return { myval: \"\" };\r\n    });\r\n  }\r\n  handleClickBackspace(valuebtn) {\r\n    this.setState({ isclicked: true });\r\n    this.setState((state) => {\r\n      return { myval: state.myval.slice(0, -1) };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const passresultcmp = <ResultCmp finalresult={this.state.myval} />;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>\r\n            {\" \"}\r\n            <b>Calculator using React</b>\r\n          </h1>\r\n          {passresultcmp}\r\n\r\n          <div>\r\n            <button onClick={this.handleClick.bind(this, 7)} button>\r\n              7\r\n            </button>\r\n            <button onClick={this.handleClick.bind(this, 8)} button>\r\n              8\r\n            </button>\r\n            <button onClick={this.handleClick.bind(this, 9)} button>\r\n              9\r\n            </button>\r\n            <button onClick={this.handleClick.bind(this, \"/\")} button>\r\n              /\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <button onClick={this.handleClick.bind(this, 4)} button>\r\n              4\r\n            </button>\r\n            <button onClick={this.handleClick.bind(this, 5)} button>\r\n              5\r\n            </button>\r\n            <button onClick={this.handleClick.bind(this, 6)} button>\r\n              6\r\n            </button>\r\n            <button onClick={this.handleClick.bind(this, \"*\")} button>\r\n              *\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <button onClick={this.handleClick.bind(this, 1)} button>\r\n              1\r\n            </button>\r\n            <button onClick={this.handleClick.bind(this, 2)} button>\r\n              2\r\n            </button>\r\n            <button onClick={this.handleClick.bind(this, 3)} button>\r\n              3\r\n            </button>\r\n            <button onClick={this.handleClick.bind(this, \"-\")} button>\r\n              -\r\n            </button>\r\n          </div>\r\n\r\n          <div>\r\n            <button onClick={this.handleClick.bind(this, 0)} button>\r\n              0\r\n            </button>\r\n            <button onClick={this.handleClick.bind(this, \".\")} button>\r\n              .\r\n            </button>\r\n            <button onClick={this.handleClick.bind(this, \"=\")} button>\r\n              =\r\n            </button>\r\n            <button onClick={this.handleClick.bind(this, \"+\")} button>\r\n              +\r\n            </button>\r\n          </div>\r\n\r\n          <div>\r\n            <button onClick={this.handleClickDelete.bind(this, \"C\")} button>\r\n              C\r\n            </button>\r\n            <button onClick={this.handleClickBackspace.bind(this, \"CE\")} button>\r\n              CE\r\n            </button>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Keypaddisplay;\r\n"],"sourceRoot":""}